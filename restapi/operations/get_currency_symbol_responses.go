// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/scottshotgg/toyota-test/models"
)

// GetCurrencySymbolOKCode is the HTTP code returned for type GetCurrencySymbolOK
const GetCurrencySymbolOKCode int = 200

/*GetCurrencySymbolOK success m8

swagger:response getCurrencySymbolOK
*/
type GetCurrencySymbolOK struct {

	/*
	  In: Body
	*/
	Payload *models.Currency `json:"body,omitempty"`
}

// NewGetCurrencySymbolOK creates GetCurrencySymbolOK with default headers values
func NewGetCurrencySymbolOK() *GetCurrencySymbolOK {

	return &GetCurrencySymbolOK{}
}

// WithPayload adds the payload to the get currency symbol o k response
func (o *GetCurrencySymbolOK) WithPayload(payload *models.Currency) *GetCurrencySymbolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get currency symbol o k response
func (o *GetCurrencySymbolOK) SetPayload(payload *models.Currency) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrencySymbolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCurrencySymbolBadRequestCode is the HTTP code returned for type GetCurrencySymbolBadRequest
const GetCurrencySymbolBadRequestCode int = 400

/*GetCurrencySymbolBadRequest Not Found

swagger:response getCurrencySymbolBadRequest
*/
type GetCurrencySymbolBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetCurrencySymbolBadRequest creates GetCurrencySymbolBadRequest with default headers values
func NewGetCurrencySymbolBadRequest() *GetCurrencySymbolBadRequest {

	return &GetCurrencySymbolBadRequest{}
}

// WithPayload adds the payload to the get currency symbol bad request response
func (o *GetCurrencySymbolBadRequest) WithPayload(payload models.Error) *GetCurrencySymbolBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get currency symbol bad request response
func (o *GetCurrencySymbolBadRequest) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrencySymbolBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetCurrencySymbolNotFoundCode is the HTTP code returned for type GetCurrencySymbolNotFound
const GetCurrencySymbolNotFoundCode int = 404

/*GetCurrencySymbolNotFound success m8

swagger:response getCurrencySymbolNotFound
*/
type GetCurrencySymbolNotFound struct {
}

// NewGetCurrencySymbolNotFound creates GetCurrencySymbolNotFound with default headers values
func NewGetCurrencySymbolNotFound() *GetCurrencySymbolNotFound {

	return &GetCurrencySymbolNotFound{}
}

// WriteResponse to the client
func (o *GetCurrencySymbolNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetCurrencySymbolInternalServerErrorCode is the HTTP code returned for type GetCurrencySymbolInternalServerError
const GetCurrencySymbolInternalServerErrorCode int = 500

/*GetCurrencySymbolInternalServerError Internal Server Error

swagger:response getCurrencySymbolInternalServerError
*/
type GetCurrencySymbolInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetCurrencySymbolInternalServerError creates GetCurrencySymbolInternalServerError with default headers values
func NewGetCurrencySymbolInternalServerError() *GetCurrencySymbolInternalServerError {

	return &GetCurrencySymbolInternalServerError{}
}

// WithPayload adds the payload to the get currency symbol internal server error response
func (o *GetCurrencySymbolInternalServerError) WithPayload(payload models.Error) *GetCurrencySymbolInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get currency symbol internal server error response
func (o *GetCurrencySymbolInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrencySymbolInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/scottshotgg/toyota-test/models"
)

// GetCurrencyAllOKCode is the HTTP code returned for type GetCurrencyAllOK
const GetCurrencyAllOKCode int = 200

/*GetCurrencyAllOK Very success

swagger:response getCurrencyAllOK
*/
type GetCurrencyAllOK struct {

	/*
	  In: Body
	*/
	Payload *models.Currencies `json:"body,omitempty"`
}

// NewGetCurrencyAllOK creates GetCurrencyAllOK with default headers values
func NewGetCurrencyAllOK() *GetCurrencyAllOK {

	return &GetCurrencyAllOK{}
}

// WithPayload adds the payload to the get currency all o k response
func (o *GetCurrencyAllOK) WithPayload(payload *models.Currencies) *GetCurrencyAllOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get currency all o k response
func (o *GetCurrencyAllOK) SetPayload(payload *models.Currencies) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrencyAllOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCurrencyAllInternalServerErrorCode is the HTTP code returned for type GetCurrencyAllInternalServerError
const GetCurrencyAllInternalServerErrorCode int = 500

/*GetCurrencyAllInternalServerError Internal Server Error

swagger:response getCurrencyAllInternalServerError
*/
type GetCurrencyAllInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewGetCurrencyAllInternalServerError creates GetCurrencyAllInternalServerError with default headers values
func NewGetCurrencyAllInternalServerError() *GetCurrencyAllInternalServerError {

	return &GetCurrencyAllInternalServerError{}
}

// WithPayload adds the payload to the get currency all internal server error response
func (o *GetCurrencyAllInternalServerError) WithPayload(payload models.Error) *GetCurrencyAllInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get currency all internal server error response
func (o *GetCurrencyAllInternalServerError) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCurrencyAllInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
